import { useState } from "react";
import { BrowserRouter as Router, Routes, Route, Link, useParams } from "react-router-dom";
import { useForm } from "react-hook-form";
import { create } from "zustand";
import "tailwindcss/tailwind.css";

// Zustand store for managing job listings
const useStore = create((set) => ({
  jobs: [],
  addJob: (job) => set((state) => ({ jobs: [...state.jobs, job] })),
}));

// Home Page - Displays list of jobs
function HomePage() {
  const { jobs } = useStore();
  return (
    <div className="p-5 min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
      <h1 className="text-2xl font-bold mb-4">Job Listings</h1>
      {jobs.length === 0 ? (
        <p>No jobs available.</p>
      ) : (
        jobs.map((job, index) => (
          <div key={index} className="border p-3 rounded mb-2 bg-white dark:bg-gray-800">
            <Link to={`/job/${index}`} className="text-blue-500 dark:text-blue-300">
              {job.title} at {job.company} ({job.location})
            </Link>
          </div>
        ))
      )}
    </div>
  );
}

// Job Details Page - Shows details of a specific job
function JobDetails() {
  const { id } = useParams();
  const { jobs } = useStore();
  const job = jobs[id];

  return job ? (
    <div className="p-5 min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
      <h1 className="text-2xl font-bold">{job.title}</h1>
      <p><strong>Company:</strong> {job.company}</p>
      <p><strong>Location:</strong> {job.location}</p>
      <p><strong>Description:</strong> {job.description}</p>
    </div>
  ) : (
    <p>Job not found.</p>
  );
}

// Dashboard Page - Allows companies to post jobs
function Dashboard() {
  const { register, handleSubmit, reset } = useForm();
  const addJob = useStore((state) => state.addJob);

  const onSubmit = (data) => {
    addJob(data);
    reset(); // Clear the form after submission
  };

  return (
    <div className="p-5 min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
      <h1 className="text-2xl font-bold mb-4">Post a Job</h1>
      <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
        <input {...register("title", { required: true })} placeholder="Job Title" className="p-2 border rounded w-full" />
        <input {...register("company", { required: true })} placeholder="Company Name" className="p-2 border rounded w-full" />
        <input {...register("location", { required: true })} placeholder="Location" className="p-2 border rounded w-full" />
        <textarea {...register("description", { required: true })} placeholder="Job Description" className="p-2 border rounded w-full"></textarea>
        <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded">Post Job</button>
      </form>
    </div>
  );
}

// Main App Component - Handles routing
function App() {
  return (
    <Router>
      <nav className="p-4 bg-blue-600 text-white flex gap-4">
        <Link to="/">Home</Link>
        <Link to="/dashboard">Dashboard</Link>
      </nav>
      <Routes>
        <Route path="/" element={<HomePage />} />
        <Route path="/dashboard" element={<Dashboard />} />
        <Route path="/job/:id" element={<JobDetails />} />
      </Routes>
    </Router>
  );
}

export default App;
